[build-system]
requires = ["setuptools>=61.0.0", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "License :: OSI Approved :: MIT License",
]
name = "llmad"
description = "A NOMAD project for implementing LLMs (using LLAMA3) to parse input and output files into the NOMAD structure schemas."
dynamic = ["version"]
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "Sarthak Kapoor", email = "sarthak.kapoor@physik.hu-berlin.de" },
    { name = "Jose M. Pizarro", email = "jose.pizarro@physik.hu-berlin.de" },
    { name = "Vikrant Chaudhary", email = "vikrant.chaudhary@physik.hu-berlin.de" },
    { name = "Ahmed Ilyas", email = "ahmed.ilyas@physik.hu-berlin.de" },
    { name = "Alvin Noe Ladines", email = "ladinesa@physik.hu-berlin.de" },
]
license = { file = "LICENSE" }
dependencies = [
    "pydantic",
    "langchain",
    "langchain-core",
    "langchain-community",
    "langchain-chroma",
    "python-magic",
    "tiktoken",
    "langchain-groq",
    "langchain_openai",
]

[project.urls]
Repository = "https://github.com/ka-sarthak/LLM-Hackathon-2024"

[project.optional-dependencies]
dev = ["ruff", "pytest", "structlog==22.3.0"]

[tool.ruff]
include = ["src/llmad/*.py", "tests/*.py"]
lint.select = [
    "E",  # pycodestyle
    "W",  # pycodestyle
    "PL", # pylint
]
lint.ignore = [
    "E501",    # Line too long ({width} > {limit} characters)
    "E701",    # Multiple statements on one line (colon)
    "E731",    # Do not assign a lambda expression, use a def
    "E402",    # Module level import not at top of file
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used instead of constant
    "PLW0603", # Using the global statement
    "PLW2901", # redefined-loop-name
    "PLR1714", # consider-using-in
    "PLR5501", # else-if-used
]
lint.fixable = ["ALL"]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

# this is entirely optional, you can remove this if you wish to
[tool.ruff.format]
# use single quotes for strings.
quote-style = "single"

# indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


[tool.setuptools.packages.find]
where = ["src"]
